{"version":3,"names":["selectFromInteractiveMode","scheme","mode","projectInfo","newScheme","newMode","schemes","length","promptForSchemeSelection","logger","info","chalk","bold","configurations","promptForConfigurationSelection"],"sources":["../../src/tools/selectFromInteractiveMode.ts"],"sourcesContent":["import {logger} from '@react-native-community/cli-tools';\nimport chalk from 'chalk';\nimport {IosProjectInfo} from '../types';\nimport {\n  promptForConfigurationSelection,\n  promptForSchemeSelection,\n} from './prompts';\n\ninterface Args {\n  scheme?: string;\n  mode?: string;\n  projectInfo: IosProjectInfo;\n}\n\nexport async function selectFromInteractiveMode({\n  scheme,\n  mode,\n  projectInfo,\n}: Args): Promise<{scheme?: string; mode?: string}> {\n  let newScheme = scheme;\n  let newMode = mode;\n\n  if (projectInfo.schemes.length > 1) {\n    newScheme = await promptForSchemeSelection(projectInfo);\n  } else {\n    logger.info(`Automatically selected ${chalk.bold(scheme)} scheme.`);\n  }\n\n  if (projectInfo.configurations.length > 1) {\n    newMode = await promptForConfigurationSelection(projectInfo);\n  } else {\n    logger.info(`Automatically selected ${chalk.bold(mode)} configuration.`);\n  }\n\n  return {\n    scheme: newScheme,\n    mode: newMode,\n  };\n}\n"],"mappings":";;;;;;AAAA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEA;AAGmB;AAQZ,eAAeA,yBAAyB,CAAC;EAC9CC,MAAM;EACNC,IAAI;EACJC;AACI,CAAC,EAA6C;EAClD,IAAIC,SAAS,GAAGH,MAAM;EACtB,IAAII,OAAO,GAAGH,IAAI;EAElB,IAAIC,WAAW,CAACG,OAAO,CAACC,MAAM,GAAG,CAAC,EAAE;IAClCH,SAAS,GAAG,MAAM,IAAAI,iCAAwB,EAACL,WAAW,CAAC;EACzD,CAAC,MAAM;IACLM,kBAAM,CAACC,IAAI,CAAE,0BAAyBC,gBAAK,CAACC,IAAI,CAACX,MAAM,CAAE,UAAS,CAAC;EACrE;EAEA,IAAIE,WAAW,CAACU,cAAc,CAACN,MAAM,GAAG,CAAC,EAAE;IACzCF,OAAO,GAAG,MAAM,IAAAS,wCAA+B,EAACX,WAAW,CAAC;EAC9D,CAAC,MAAM;IACLM,kBAAM,CAACC,IAAI,CAAE,0BAAyBC,gBAAK,CAACC,IAAI,CAACV,IAAI,CAAE,iBAAgB,CAAC;EAC1E;EAEA,OAAO;IACLD,MAAM,EAAEG,SAAS;IACjBF,IAAI,EAAEG;EACR,CAAC;AACH"}