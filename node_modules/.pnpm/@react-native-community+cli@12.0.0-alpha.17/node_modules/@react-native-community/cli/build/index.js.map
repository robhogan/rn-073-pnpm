{"version":3,"names":["pkgJson","require","program","CommanderCommand","usage","version","enablePositionalOptions","handleError","err","logger","enable","opts","verbose","error","message","replace","stack","log","hasDebugMessages","info","chalk","dim","reset","process","exit","printExamples","examples","output","length","formattedUsage","map","example","desc","cyan","cmd","join","concat","bold","isDetachedCommand","command","detached","isAttachedCommand","attachCommand","config","commands","find","name","Error","option","action","handleAction","args","passedOptions","argv","Array","from","slice","func","description","addHelpText","opt","options","parse","val","default","run","setupAndRun","e","includes","disable","setVerbose","platform","scriptName","absolutePath","path","__dirname","childProcess","execFileSync","stdio","warn","red","loadConfig","projectCommands","Object","values","debug","CLIError","detachedCommands","bin","resolve"],"sources":["../src/index.ts"],"sourcesContent":["import loadConfig from '@react-native-community/cli-config';\nimport {CLIError, logger} from '@react-native-community/cli-tools';\nimport type {\n  Command,\n  Config,\n  DetachedCommand,\n} from '@react-native-community/cli-types';\nimport chalk from 'chalk';\nimport childProcess from 'child_process';\nimport {Command as CommanderCommand} from 'commander';\nimport path from 'path';\nimport {detachedCommands, projectCommands} from './commands';\n\nconst pkgJson = require('../package.json');\n\nconst program = new CommanderCommand()\n  .usage('[command] [options]')\n  .version(pkgJson.version, '-v', 'Output the current version')\n  .enablePositionalOptions();\n\nconst handleError = (err: Error) => {\n  logger.enable();\n  if (program.opts().verbose) {\n    logger.error(err.message);\n  } else {\n    // Some error messages (esp. custom ones) might have `.` at the end already.\n    const message = err.message.replace(/\\.$/, '');\n    logger.error(`${message}.`);\n  }\n  if (err.stack) {\n    logger.log(err.stack);\n  }\n  if (!program.opts().verbose && logger.hasDebugMessages()) {\n    logger.info(\n      chalk.dim(\n        `Run CLI with ${chalk.reset('--verbose')} ${chalk.dim(\n          'flag for more details.',\n        )}`,\n      ),\n    );\n  }\n  process.exit(1);\n};\n\nfunction printExamples(examples: Command['examples']) {\n  let output: string[] = [];\n\n  if (examples && examples.length > 0) {\n    const formattedUsage = examples\n      .map((example) => `  ${example.desc}: \\n  ${chalk.cyan(example.cmd)}`)\n      .join('\\n\\n');\n\n    output = output.concat([chalk.bold('\\nExample usage:'), formattedUsage]);\n  }\n\n  return output.join('\\n').concat('\\n');\n}\n\n/**\n * Custom type assertion needed for the `makeCommand` conditional\n * types to be properly resolved.\n */\nfunction isDetachedCommand(\n  command: Command<boolean>,\n): command is DetachedCommand {\n  return command.detached === true;\n}\n\nfunction isAttachedCommand(\n  command: Command<boolean>,\n): command is Command<false> {\n  return !isDetachedCommand(command);\n}\n\n/**\n * Attaches a new command onto global `commander` instance.\n *\n * Note that this function takes additional argument of `Config` type in case\n * passed `command` needs it for its execution.\n */\nfunction attachCommand<C extends Command<boolean>>(\n  command: C,\n  config: C extends DetachedCommand ? Config | undefined : Config,\n): void {\n  // commander@9.x will internally push commands into an array structure!\n  // Commands with duplicate names (e.g. from config) must be reduced before\n  // calling this function.\n  // https://unpkg.com/browse/commander@9.4.1/lib/command.js#L1308\n  if (program.commands.find((cmd) => cmd.name() === command.name)) {\n    throw new Error(\n      'Invariant Violation: Attempted to override an already registered ' +\n        `command: '${command.name}'. This is not supported by the underlying ` +\n        'library and will cause bugs. Ensure a command with this `name` is ' +\n        'only registered once.',\n    );\n  }\n\n  const cmd = program\n    .command(command.name)\n    .option('--verbose', 'Increase logging verbosity')\n    .action(async function handleAction(\n      this: CommanderCommand,\n      ...args: string[]\n    ) {\n      const passedOptions = this.opts();\n      const argv = Array.from(args).slice(0, -1);\n\n      try {\n        if (isDetachedCommand(command)) {\n          await command.func(argv, passedOptions, config);\n        } else if (isAttachedCommand(command)) {\n          await command.func(argv, config, passedOptions);\n        } else {\n          throw new Error('A command must be either attached or detached');\n        }\n      } catch (error) {\n        handleError(error as Error);\n      }\n    });\n\n  if (command.description) {\n    cmd.description(command.description);\n  }\n\n  cmd.addHelpText('after', printExamples(command.examples));\n\n  for (const opt of command.options || []) {\n    cmd.option(\n      opt.name,\n      opt.description ?? '',\n      opt.parse || ((val: any) => val),\n      typeof opt.default === 'function' ? opt.default(config) : opt.default,\n    );\n  }\n}\n\nasync function run() {\n  try {\n    await setupAndRun();\n  } catch (e) {\n    handleError(e as Error);\n  }\n}\n\nasync function setupAndRun() {\n  // Commander is not available yet\n\n  // when we run `config`, we don't want to output anything to the console. We\n  // expect it to return valid JSON\n  if (process.argv.includes('config')) {\n    logger.disable();\n  }\n\n  logger.setVerbose(process.argv.includes('--verbose'));\n\n  // We only have a setup script for UNIX envs currently\n  if (process.platform !== 'win32') {\n    const scriptName = 'setup_env.sh';\n    const absolutePath = path.join(__dirname, '..', scriptName);\n\n    try {\n      childProcess.execFileSync(absolutePath, {stdio: 'pipe'});\n    } catch (error) {\n      logger.warn(\n        `Failed to run environment setup script \"${scriptName}\"\\n\\n${chalk.red(\n          error,\n        )}`,\n      );\n      logger.info(\n        `React Native CLI will continue to run if your local environment matches what React Native expects. If it does fail, check out \"${absolutePath}\" and adjust your environment to match it.`,\n      );\n    }\n  }\n\n  let config: Config | undefined;\n  try {\n    config = loadConfig();\n\n    logger.enable();\n\n    const commands: Record<string, Command> = {};\n\n    // Reduce overridden commands before registering\n    for (const command of [...projectCommands, ...config.commands]) {\n      commands[command.name] = command;\n    }\n\n    for (const command of Object.values(commands)) {\n      attachCommand(command, config);\n    }\n  } catch (error) {\n    /**\n     * When there is no `package.json` found, the CLI will enter `detached` mode and a subset\n     * of commands will be available. That's why we don't throw on such kind of error.\n     */\n    if ((error as Error).message.includes(\"We couldn't find a package.json\")) {\n      logger.debug((error as Error).message);\n      logger.debug(\n        'Failed to load configuration of your project. Only a subset of commands will be available.',\n      );\n    } else {\n      throw new CLIError(\n        'Failed to load configuration of your project.',\n        error as any,\n      );\n    }\n  } finally {\n    for (const command of detachedCommands) {\n      attachCommand(command, config);\n    }\n  }\n\n  program.parse(process.argv);\n}\n\nconst bin = require.resolve('./bin');\n\nexport {run, bin, loadConfig};\n"],"mappings":"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"}