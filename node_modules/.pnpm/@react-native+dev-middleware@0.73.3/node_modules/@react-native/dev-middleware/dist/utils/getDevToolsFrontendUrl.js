"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true,
});
exports.default = getDevToolsFrontendUrl;
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 *
 * @format
 * @oncall react_native
 */

/**
 * The Chrome DevTools frontend revision to use. This should be set to the
 * latest version known to be compatible with Hermes.
 *
 * Revision should be the full identifier from:
 * https://chromium.googlesource.com/chromium/src.git
 */
const DEVTOOLS_FRONTEND_REV = "d9568d04d7dd79269c5a655d7ada69650c5a8336"; // Chrome 100.0.4896.75

/**
 * Construct the URL to Chrome DevTools connected to a given debugger target.
 */
function getDevToolsFrontendUrl(
  webSocketDebuggerUrl,
  devServerUrl,
  experiments
) {
  const scheme = new URL(webSocketDebuggerUrl).protocol.slice(0, -1);
  const webSocketUrlWithoutProtocol = webSocketDebuggerUrl.replace(
    /^wss?:\/\//,
    ""
  );
  if (experiments.enableCustomDebuggerFrontend) {
    return `${`${devServerUrl}/debugger-frontend/rn_inspector.html`}?${scheme}=${encodeURIComponent(
      webSocketUrlWithoutProtocol
    )}&sources.hide_add_folder=true`;
  }
  return `${`https://chrome-devtools-frontend.appspot.com/serve_rev/@${DEVTOOLS_FRONTEND_REV}/devtools_app.html`}?panel=console&${scheme}=${encodeURIComponent(
    webSocketUrlWithoutProtocol
  )}`;
}
